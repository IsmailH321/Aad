## Kotlin to implement control structures and loops.

fun main() {
    val number = 10
    if (number % 2 == 0) {
        println("$number is even")
    } else {
        println("$number is odd")
    }

    println("\nFor Loop:")
    for (i in 1..5) {
        println("Iteration $i")
    }

    println("\nWhile Loop:")
    var counter = 1
    while (counter <= 5) {
        println("Counter: $counter")
        counter++
    }

    println("\nDo-While Loop:")
    var count = 1
    do {
        println("Count: $count")
        count++
    } while (count <= 5)
}



## application to display Toast message on pressing the Back button.
#xml file

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <TextView
        android:id="@+id/tv_message"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Press Back Button to Display Toast"
        android:textSize="18sp"
        android:layout_centerInParent="true"/>
</RelativeLayout>

#kt file

package com.example.backbuttontoastapp

import android.os.Bundle
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }
    override fun onBackPressed() {
        Toast.makeText(this, "Back button pressed!", Toast.LENGTH_SHORT).show()
    }
}



## linear layout and insert 10 games in the list view and display the selected game in the text view.
# xml file

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/tv_selected_game"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Selected Game will appear here"
        android:textSize="18sp"
        android:layout_marginBottom="20dp"/>

    <ListView
        android:id="@+id/lv_games"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1" />
</LinearLayout>

#kt file

package com.example.gamelistapp

import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.ListView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val listView: ListView = findViewById(R.id.lv_games)
        val selectedGameText: TextView = findViewById(R.id.tv_selected_game)

        val games = listOf("Football", "Basketball", "Tennis", "Cricket", "Baseball", 
                           "Table Tennis", "Badminton", "Rugby", "Volleyball", "Hockey")

        val adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, games)
        listView.adapter = adapter

        listView.setOnItemClickListener { _, _, position, _ ->
            selectedGameText.text = "Selected Game: ${games[position]}"
        }
    }
}



## Kotlin to implement control structures and loops.

fun main() {
    val number = 10
    if (number > 0) {
        println("The number is positive")
    } else {
        println("The number is non-positive")
    }

    println("\nFor loop Example:")
    for (i in 1..5) {
        println("Iteration number: $i")
    }

    println("\nWhile loop Example:")
    var counter = 1
    while (counter <= 5) {
        println("Counter is: $counter")
        counter++
    }

    println("\nWhen Expression Example:")
    val dayOfWeek = 3
    when (dayOfWeek) {
        1 -> println("Today is Monday")
        2 -> println("Today is Tuesday")
        3 -> println("Today is Wednesday")
        4 -> println("Today is Thursday")
        5 -> println("Today is Friday")
        6 -> println("Today is Saturday")
        7 -> println("Today is Sunday")
        else -> println("Invalid day")
    }
}



## Android application demonstrating response to event/user interaction for Checkbox Radio button Button Spinner.
# xml file

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:gravity="center">

    <CheckBox
        android:id="@+id/checkbox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Check me" />

    <RadioGroup
        android:id="@+id/radioGroup"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <RadioButton
            android:id="@+id/radio_button1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Option 1" />

        <RadioButton
            android:id="@+id/radio_button2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Option 2" />
    </RadioGroup>

    <Spinner
        android:id="@+id/spinner"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Submit"
        android:layout_marginTop="20dp"/>

</LinearLayout>

#kt file

package com.example.eventhandlingapp

import android.os.Bundle
import android.view.View
import android.widget.*
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    private lateinit var checkbox: CheckBox
    private lateinit var radioGroup: RadioGroup
    private lateinit var spinner: Spinner
    private lateinit var button: Button

    private val spinnerData = listOf("Option A", "Option B", "Option C")

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        checkbox = findViewById(R.id.checkbox)
        radioGroup = findViewById(R.id.radioGroup)
        spinner = findViewById(R.id.spinner)
        button = findViewById(R.id.button)

        val adapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, spinnerData)
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
        spinner.adapter = adapter

        checkbox.setOnCheckedChangeListener { _, isChecked ->
            Toast.makeText(this, if (isChecked) "Checked" else "Unchecked", Toast.LENGTH_SHORT).show()
        }

        radioGroup.setOnCheckedChangeListener { _, checkedId ->
            val message = if (checkedId == R.id.radio_button1) "Option 1" else "Option 2"
            Toast.makeText(this, "Selected: $message", Toast.LENGTH_SHORT).show()
        }

        spinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
            override fun onItemSelected(parent: AdapterView<*>, view: View?, position: Int, id: Long) {
                Toast.makeText(this@MainActivity, "Selected: ${spinnerData[position]}", Toast.LENGTH_SHORT).show()
            }
            override fun onNothingSelected(parent: AdapterView<*>) {}
        }

        button.setOnClickListener {
            val checkboxStatus = if (checkbox.isChecked) "Checked" else "Unchecked"
            val selectedRadio = if (radioGroup.checkedRadioButtonId == R.id.radio_button1) "Option 1" else "Option 2"
            val selectedSpinner = spinner.selectedItem.toString()

            Toast.makeText(this, "Checkbox: $checkboxStatus\nRadio: $selectedRadio\nSpinner: $selectedSpinner", Toast.LENGTH_LONG).show()
        }
    }
}



## linear layout and insert 10 animals in the list view and display the appropriate Toast.
# xml file

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:gravity="center">

    <ListView
        android:id="@+id/animalListView"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />
</LinearLayout>

# kt file

package com.example.animalapp

import android.os.Bundle
import android.view.View
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.ListView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val animals = listOf(
            "Lion", "Tiger", "Elephant", "Giraffe", "Zebra",
            "Monkey", "Kangaroo", "Panda", "Penguin", "Koala"
        )

        val animalListView: ListView = findViewById(R.id.animalListView)

        val adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, animals)
        animalListView.adapter = adapter

        animalListView.setOnItemClickListener { parent, view, position, id ->
            val clickedAnimal = parent.getItemAtPosition(position).toString()
            
            Toast.makeText(this, "You selected: $clickedAnimal", Toast.LENGTH_SHORT).show()
        }
    }
}
